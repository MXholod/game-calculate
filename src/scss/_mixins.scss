@use "sass:math";
@use 'sass:color';

@mixin custom-font($fontFamily, $fontName){
	@font-face {
		font-family: $fontFamily;
		font-weight: normal;
		font-style: normal;
		/*IE9 Compat Modes*/
		src:url('./../fonts/#{$fontName}.eot');
		/*IE6-IE8 */
		src:url('./../fonts/#{$fontName}.eot?#iefix') format('embedded-opentype'), 
			url('./../fonts/#{$fontName}.woff') format('woff'), 
			url('./../fonts/#{$fontName}.ttf') format('truetype');
	}
}
/*This mixin is used as private*/
@mixin cubes-3d(){
	$cube-z: 225px;
	.three-d-block__side{
		position: absolute;
		width: inherit;
		height: inherit;
	}
	.three-d-block_center{
		background-image: radial-gradient(circle, rgba(230,221,224,1) 0%, rgba(90,119,147,1) 100%);
		transform: translateZ($cube-z);
		display: grid;
		grid-gap:3px;
		@include square-3dcube-cells(2, 2, 1);
		@include square-3dcube-cells(3, 3, 2);
		@include square-3dcube-cells(4, 4, 3);
		@include square-3dcube-cells(5, 5, 4);
		@include square-3dcube-cells(6, 6, 5);
		@include square-3dcube-cells(7, 7, 6);
		@include square-3dcube-cells(8, 8, 7);
		@include square-3dcube-cells(9, 9, 8);
		@include square-3dcube-cells(10, 10, 9);
		@include square-3dcube-cells(11, 11, 10);
	}
	.three-d-block_left{
		background-image: radial-gradient(circle, rgba(236,210,222,1) 0%, rgba(169,194,223,1) 100%);
		transform: rotateY(-90deg) translateZ($cube-z);
	}
	.three-d-block_right{
		background-image: radial-gradient(circle, rgba(219,205,212,1) 0%, rgba(154,169,187,1) 100%);
		transform: rotateY(90deg) translateZ($cube-z);
	}
	.three-d-block_bottom{
		background-image: radial-gradient(circle, rgba(181,177,179,1) 0%, rgba(119,143,171,1) 100%);
		transform: rotateX(-90deg) translateZ($cube-z);
	}
	.three-d-block_top{
		background-image: radial-gradient(circle, rgba(224,208,216,1) 0%, rgba(119,127,135,1) 100%);
		transform: rotateX(90deg) translateZ($cube-z);
	}
	.three-d-block_back{
		background-image: radial-gradient(circle, rgba(230,221,224,1) 0%, rgba(155,166,176,1) 100%);
		transform: translateZ($cube-z * (-1)) scaleX(-1);
	}
}
@mixin square-3dcube-cells($start:2, $end:2, $level:1){
	/*@for $i from $start through $end{*/
		.#{level-cell-}#{$level}{
			position:relative;
			box-sizing: border-box;
			text-align:center;
			padding-top:30%;
			border: 1px solid #000;
			color:#fff;
			$fontVal: math.div($level,10);
			font-size: #{1.5 - ($fontVal + 0.1)}em;
			@if($level == 4){
				font-size: 0.7em;
			}
			@else if($level == 5){
				font-size: 0.6em;
			}
			@else if($level == 6){
				font-size: 0.5em;
			}
			@else if($level == 7 or $level == 8){
				font-size: 0.45em;
			}
			@else if($level == 9 or $level == 10){
				font-size: 0.4em;
			}
			& span{
				height:30%;
				width:30%;
				position:absolute;
				z-index:1;
				bottom:3%;
				left:3%;
				@if($level == 9 or $level == 10){
					padding-top:25%;
					font-size: 0.9em;
				}	
			}
			&::before{
				content:"Open it";
				font-size:.8em;
				padding-top:40%;
				display: var(--cubeCellCover, block);
				position:absolute;
				z-index:2;
				top:0;
				bottom:0;
				left:0;
				right:0;
				background-image: linear-gradient(to top, var(--game-cube-bg-bottom) 5%, var(--game-cube-bg-top) 45%);
				cursor:pointer;
			}
		}
	/*}*/
}
@mixin square-3d-scale($duration:10s,$repeat:1){
	/*Increase the cube*/
	@keyframes cube-scale{
		0%{ transform: scale(0,0); }
		100%{ transform: scale(1,1); }
	}
	.three-d-block-wrapper{
		transform: rotateY(0deg) rotateX(0deg) scale(.1,.1);
		animation: cube-scale $duration $repeat forwards ease-in-out paused;
		@include square-3d($duration,$repeat);
	}
	/*Decrease the cube*/
	@keyframes cube-scale-rewind{
		0%{ transform: scale(1,1); }
		100%{ transform: scale(0,0); }
	}
	.three-d-block-wrapper-rewind{
		transform: rotateY(0deg) rotateX(0deg) scale(1,1);
		animation: cube-scale-rewind $duration $repeat forwards ease-in-out paused;
		@include square-3d-rewind($duration,$repeat);
	}
}
@mixin square-3d($duration:10s,$repeat:1){
	@keyframes cube-motion{
		0%{ transform: rotateY(0deg) rotateX(0deg); }
		20%{ transform: rotateY(-180deg) rotateX(0deg); }
		40%{ transform: rotateY(-360deg) rotateX(0deg); }
		60%{ transform: rotateY(0deg) rotateX(0deg); }
		80%{ transform: rotateY(270deg) rotateX(270deg); }
		100%{ transform: rotateY(360deg) rotateX(360deg); }
	}
	.three-d-block{
		width: 450px;
		height: 450px;
		transform-style: preserve-3d;
		animation-name: cube-motion;
		animation-duration: $duration;
		animation-direction: normal;
		animation-timing-function: ease-in-out;
		animation-iteration-count: $repeat;
		animation-fill-mode: forwards;
		animation-play-state: paused;
		@include cubes-3d();
	}
}
@mixin square-3d-rewind($duration:10s,$repeat:1){
	@keyframes cube-motion-rewind{
		0%{ transform: rotateY(0deg) rotateX(0deg); }
		20%{ transform: rotateY(-180deg) rotateX(0deg); }
		40%{ transform: rotateY(-360deg) rotateX(0deg); }
		60%{ transform: rotateY(0deg) rotateX(0deg); }
		80%{ transform: rotateY(270deg) rotateX(270deg); }
		100%{ transform: rotateY(360deg) rotateX(360deg); }
	}
	.three-d-block-rewind{
		width: 450px;
		height: 450px;
		transform-style: preserve-3d;
		animation-name: cube-motion-rewind;
		animation-duration: $duration;
		animation-direction: normal;
		animation-timing-function: ease-in-out;
		animation-iteration-count: $repeat;
		animation-fill-mode: forwards;
		animation-play-state: paused;
		@include cubes-3d();
	}
}
@mixin input-range-slider($inp-block-selector){
	#{$inp-block-selector}{
		position: relative;
		display: block;
		width: 80%;
		font-size: .9em;
		font-weight: bold;
		& div:first-child{
			border: 3px solid #d5d5d5;
			font-size: 1.2em;
			color: #000;
			background-color: #caaaa1;
			display: flex;
			justify-content: center;
			span:nth-child(1){
				padding: 0 5px;
				font-size: .9em;
				font-weight: bold;
				width: 20%;
			}
			output:nth-child(2){
				width: 30%;
				border-left: 1px solid #d5d5d5;
				border-right: 1px solid #d5d5d5;
				margin-right:3%;
				padding: 0 5px;
			}
			span:nth-child(3){
				width: 20%;
				padding: 0 5px;
				font-size: .9em;
				font-weight: bold;
			}
			output:nth-child(4){
				width: 30%;
				border-left: 1px solid #d5d5d5;
				padding: 0 5px;
			}
		}
	}
	#{$inp-block-selector}::before{
		content: "";
		display: block;
		position: absolute;
		bottom:11%;
		width: 100%;
		height: 3px;
		background-color: #d5d5d5;
	}
	#{$inp-block-selector} input[type="range"]{
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		outline: none;
		pointer-events:none;
		width:50%;
	}
	#{$inp-block-selector} input[type="range"]::-webkit-slider-runnable-track{
		-webkit-appearance: none;
	}
	#{$inp-block-selector} input[type="range"]::-moz-range-track{
		-moz-appearance: none;
	}
	#{$inp-block-selector} input[type="range"]::-ms-track{
		appearance: none;
	}
	#{$inp-block-selector} input[type="range"]::-webkit-slider-thumb{
		-webkit-appearance: none;
		width: 1.5em;
		height: 1.5em;
		background-color: #d9cbcb;
		border-radius: 50%;
		cursor: pointer;
		pointer-events: auto;
	}
	#{$inp-block-selector} input[type="range"]::-moz-range-thumb{
		-moz-appearance: none;
		width: 1.5em;
		height: 1.5em;
		background-color: #d9cbcb;
		border-radius: 50%;
		cursor: pointer;
		pointer-events: auto;
	}
	#{$inp-block-selector} input[type="range"]::-ms-thumb{
		appearance: none;
		width: 1.5em;
		height: 1.5em;
		background-color: #d9cbcb;
		border-radius: 50%;
		cursor: pointer;
		pointer-events: auto;
	}
	#{$inp-block-selector} input[type="range"]:active::-webkit-slider-thumb{
		background-color: #d9cbcb;
		border: 3px solid #766a6a;
	}
}
@mixin level-board($behaviorClass, $showhide: true){
	.#{$behaviorClass}{
		@if($showhide){
			@keyframes board-move-show{
				from { top:-50%; }
				to { top:30%; }
			}
			animation: board-move-show 3s forwards ease-in-out;
		}@else{
			@keyframes board-move-hide{
				from { top:30%; }
				to { top:110%; }
			}
			animation: board-move-hide 3s forwards ease-in-out;
		}
		.level-board_level-number{
			flex-basis: 40%;
			padding-top: 5%;
			width: 90%;
			text-align: center;
			span:last-child{
				margin-left:5%;
			}
		}
		.level-board_range-numbers{
			flex-basis: 50%;
			width: 90%;
			text-align: center;
			display: flex;
			flex-direction:column;
			align-items:center;
			span:last-child{
				margin-left:5%;
			}			
		}
	}
}
@mixin game-button($colorStart, $colorEnd){
	border-radius:3px;
	padding: 2px 4px;
	color: #fff;
	background-image: linear-gradient(180deg, $colorStart, $colorEnd);
	&:focus{
		outline:none;
	}
	&:hover, &:active{
		cursor:pointer;
		background-image: linear-gradient(360deg, $colorStart, $colorEnd);
		box-shadow: 0px 0px 2px #000;
	}
	&:disabled{
		color: #D3D3D3;
		cursor:not-allowed;
		box-shadow: none;
	}
}